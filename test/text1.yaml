# GCP Cloud Build configuration for BMI Calculator

# Define build steps
steps:
  # Stage 1: Get Dependencies
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'dependencies'
    entrypoint: 'flutter'
    args: ['pub', 'get']

  # Stage 2: Run Tests
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'test'
    entrypoint: 'flutter'
    args: ['test', '--coverage']
    waitFor: ['dependencies']

  # Stage 3: Build App Bundle (Release)
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'build-release'
    entrypoint: 'flutter'
    args: ['build', 'appbundle', '--release']
    waitFor: ['test']

  # Stage 4: Copy artifacts and update version
  - name: 'bash'
    id: 'prepare-release'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create artifacts directory
        mkdir -p artifacts
        
        # Copy the AAB file
        cp build/app/outputs/bundle/release/app-release.aab artifacts/
        
        # Create version file using Cloud Build ID
        echo "${_VERSION_PREFIX}" > artifacts/version.txt
    waitFor: ['build-release']

  # Stage 5: Upload to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'upload-to-storage'
    args:
      - 'cp'
      - 'artifacts/app-release.aab'
      - 'gs://${_BUCKET_NAME}/releases/${_VERSION_PREFIX}.aab'
    waitFor: ['prepare-release']

  # Stage 6: Upload to Google Play Store
  - name: 'ruby:3.1'
    id: 'upload-to-play-store'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Install required packages
        set -x  # Enable command echo
        apt-get update && apt-get install -y jq curl gnupg
        
        # Set up environment
        export LC_ALL=en_US.UTF-8
        export LANG=en_US.UTF-8
        export RUBYZIP_V3_API_WARN=1
        
        # Install gcloud
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        apt-get update && apt-get install -y google-cloud-cli
        
        # Get Play Store credentials
        gcloud secrets versions access latest --secret=play-store-key > /workspace/bmi_service_accounts_key.json
        
        # Validate JSON file
        cat /workspace/bmi_service_accounts_key.json | jq . || { echo "Invalid JSON file"; exit 1; }
        
        # Install and set up bundler
        gem install bundler -v 2.4.22
        bundle config set --local path 'vendor/bundle'
        bundle install
        
        # Debug information
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Fastlane directory contents:"
        ls -la fastlane/
        echo "Artifacts directory contents:"
        ls -la artifacts/
        
        # Run fastlane in non-interactive mode
        echo "Deploying version: ${_VERSION_PREFIX}"
        FASTLANE_SKIP_UPDATE_CHECK=1 FASTLANE_OPT_OUT_USAGE=1 bundle exec fastlane android deploy --verbose
    waitFor: ['prepare-release']
    env:
      - 'PLAY_TRACK=${_PLAY_TRACK}'
      - 'PACKAGE_NAME=${_PACKAGE_NAME}'
      - 'BUILD_VERSION=${_VERSION_PREFIX}'

# Define build timeout
timeout: '3600s'

# Define build substitutions
substitutions:
  _BUCKET_NAME: 'sample-gcp-actions-geo_cloudbuild'  # Your existing bucket
  _ENVIRONMENT: 'production'
  _VERSION_PREFIX: '1.0.0'  # Base version number
  _PLAY_TRACK: 'internal'  # Specify the Google Play track (using internal for safety)
  _PACKAGE_NAME: 'com.example.bmicalculator'  # Replace with your app's package name

# Define build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  dynamicSubstitutions: true

# Define build tags
tags:
  - 'flutter'
  - 'bmi-calculator'
  - '${_ENVIRONMENT}'