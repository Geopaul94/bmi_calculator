# # GCP Cloud Build configuration for BMI Calculator
# # Similar to GitHub Actions workflow

# # Define build steps
# steps:
#   # Stage 1: Setup and Dependencies
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'setup'
#     args: ['pull', 'cirrusci/flutter:stable']
#     waitFor: ['-']  # Start immediately

#   # Stage 2: Get Dependencies
#   - name: 'cirrusci/flutter:stable'
#     id: 'dependencies'
#     entrypoint: 'flutter'
#     args: ['pub', 'get']
#     waitFor: ['setup']

#   # Stage 3: Code Analysis
#   - name: 'cirrusci/flutter:stable'
#     id: 'analyze'
#     entrypoint: 'flutter'
#     args: ['analyze']
#     waitFor: ['dependencies']

#   # Stage 4: Run Tests
#   - name: 'cirrusci/flutter:stable'
#     id: 'test'
#     entrypoint: 'flutter'
#     args: ['test', '--coverage']
#     waitFor: ['analyze']

#   # Stage 5: Build APK (Debug)
#   - name: 'cirrusci/flutter:stable'
#     id: 'build-debug'
#     entrypoint: 'flutter'
#     args: ['build', 'apk', '--debug']
#     waitFor: ['test']

#   # Stage 6: Build APK (Release)
#   - name: 'cirrusci/flutter:stable'
#     id: 'build-release'
#     entrypoint: 'flutter'
#     args: ['build', 'apk', '--release']
#     waitFor: ['build-debug']

#   # Stage 7: Upload to Cloud Storage
#   - name: 'gcr.io/cloud-builders/gsutil'
#     id: 'upload'
#     args: ['cp', 'build/app/outputs/flutter-apk/app-release.apk', 'gs://sample_gcp_cicd_geo/app-release.apk']
#     waitFor: ['build-release']

#   # Stage 8: Deploy to Firebase App Distribution (if configured)
#   - name: 'gcr.io/cloud-builders/gcloud'
#     id: 'deploy-test'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         if [ -f "play-store-key.json" ]; then
#           gcloud auth activate-service-account --key-file=play-store-key.json
#           gcloud firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
#             --app $_FIREBASE_APP_ID \
#             --release-notes "Build $BUILD_ID" \
#             --groups "testers"
#         fi
#     waitFor: ['upload']

# # Define build timeout
# timeout: '3600s'

# # Define build artifacts
# artifacts:
#   objects:
#     location: 'gs://sample_gcp_cicd_geo/'
#     paths: 
#       - 'app-release.apk'
#       - 'build/app/outputs/flutter-apk/app-debug.apk'

# # Define build substitutions
# substitutions:
#   _FIREBASE_APP_ID: ''  # Your Firebase App ID
#   _ENVIRONMENT: 'development'  # Can be development, staging, or production

# # Define build options
# options:
#   logging: CLOUD_LOGGING_ONLY
#   machineType: 'E2_HIGHCPU_8'  # Use a more powerful machine for faster builds
#   dynamicSubstitutions: true

# # Define build tags
# tags:
#   - 'flutter'
#   - 'bmi-calculator'
#   - '${_ENVIRONMENT}' 
# GCP Cloud Build configuration for BMI Calculator
# Similar to GitHub Actions workflow



# GCP Cloud Build configuration for BMI Calculator
# Similar to GitHub Actions workflow

# Define build steps
steps:
  # Stage 1: Get Dependencies
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'dependencies'
    entrypoint: 'flutter'
    args: ['pub', 'get']

  # Stage 2: Code Analysis
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'analyze'
    entrypoint: 'flutter'
    args: ['analyze']
    waitFor: ['dependencies']

  # Stage 3: Run Tests
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'test'
    entrypoint: 'flutter'
    args: ['test', '--coverage']
    waitFor: ['analyze']

  # Stage 4: Build APK (Debug)
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'build-debug'
    entrypoint: 'flutter'
    args: ['build', 'apk', '--debug']
    waitFor: ['test']

  # Stage 5: Build APK (Release)
  - name: 'ghcr.io/cirruslabs/flutter:stable'
    id: 'build-release'
    entrypoint: 'flutter'
    args: ['build', 'apk', '--release']
    waitFor: ['build-debug']

  # Stage 6: Copy APKs to workspace
  - name: 'bash'
    id: 'copy-artifacts'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p artifacts
        cp build/app/outputs/flutter-apk/app-release.apk artifacts/
        cp build/app/outputs/flutter-apk/app-debug.apk artifacts/
    waitFor: ['build-release']

  # Stage 7: Upload to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'upload'
    args: ['cp', 'artifacts/app-release.apk', 'gs://sample_gcp_cicd_geo/app-release.apk']
    waitFor: ['copy-artifacts']

  # Stage 8: Deploy to Firebase App Distribution (if configured)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -f "play-store-key.json" ]; then
          gcloud auth activate-service-account --key-file=play-store-key.json
          gcloud firebase appdistribution:distribute artifacts/app-release.apk \
            --app $_FIREBASE_APP_ID \
            --release-notes "Build $BUILD_ID" \
            --groups "testers"
        fi
    waitFor: ['upload']

# Define build timeout
timeout: '3600s'

# Define build artifacts
artifacts:
  objects:
    location: 'gs://sample_gcp_cicd_geo/'
    paths:
      - 'artifacts/app-release.apk'
      - 'artifacts/app-debug.apk'

# Define build substitutions
substitutions:
  _FIREBASE_APP_ID: ''  # Your Firebase App ID
  _ENVIRONMENT: 'development'  # Can be development, staging, or production

# Define build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Use a more powerful machine for faster builds
  dynamicSubstitutions: true

# Define build tags
tags:
  - 'flutter'
  - 'bmi-calculator'
  - '${_ENVIRONMENT}' 